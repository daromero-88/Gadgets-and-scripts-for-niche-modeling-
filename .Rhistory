ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme(text = element_text(size=18), #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
#theme(text = element_text(size=18), #changing text size
#      axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme(text = element_text(size=18), #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme(text = element_text(size=18), #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black") +
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme(text = element_text(size=18), #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme(text = element_text(size=18), #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black")) +
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
#theme(text = element_text(size=18), #changing text size
#     axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
text = element_text(size=18),  axis.text.x = element_text(angle=0, hjust=1)) +
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO7)) + #defining the plot
geom_pointrange(
aes(ymin = BIO7-BIO7_sd, ymax = BIO7+BIO7_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) +
ggtitle ('BIO7') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO12)) + #defining the plot
geom_pointrange(
aes(ymin = BIO12-BIO12_sd, ymax = BIO12+BIO12_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.005)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) +
ggtitle ('BIO12') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.001)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 0.00)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 6)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 1)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 9)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 3)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO1)) + #defining the plot
geom_pointrange(
aes(ymin = BIO1-BIO1_sd, ymax = BIO1+BIO1_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 5)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) + #changing text size and angle
ggtitle ('BIO1') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO7)) + #defining the plot
geom_pointrange(
aes(ymin = BIO7-BIO7_sd, ymax = BIO7+BIO7_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 5)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) +
ggtitle ('BIO7') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO7)) + #defining the plot
geom_pointrange(
aes(ymin = BIO7-BIO7_sd, ymax = BIO7+BIO7_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 6)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) +
ggtitle ('BIO7') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO7)) + #defining the plot
geom_pointrange(
aes(ymin = BIO7-BIO7_sd, ymax = BIO7+BIO7_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 5)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) +
ggtitle ('BIO7') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO12)) + #defining the plot
geom_pointrange(
aes(ymin = BIO12-BIO12_sd, ymax = BIO12+BIO12_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 5)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) +
ggtitle ('BIO12') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
ggplot(fer1, aes(x = site, y = BIO12)) + #defining the plot
geom_pointrange(
aes(ymin = BIO12-BIO12_sd, ymax = BIO12+BIO12_sd, color = site), #limits of the plot with error lines
position = position_dodge(width = 5)) + #separating groups by internal lines
scale_color_manual(values = c("darkgoldenrod1","firebrick", "red")) + #selecting colors
#facet_wrap(~clim) + #dividing the groups by faces
theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"), #make awful grid dissapear, from here: https://felixfan.github.io/ggplot2-remove-grid-background-margin/
text = element_text(size=18),  #changing text size
axis.text.x = element_text(angle=0, hjust=1)) +
ggtitle ('BIO12') + #changing title name
labs(y= "Means", x = "Localities")  #changing axes labels
getwd()
setwd ('/Users/daniel/Documents/OROPUCHE/PREDICTION/NEW_PROJ_2')
getwd()
test = read.csv ('.//Users/daniel/Documents/OROPUCHE/PREDICTION/NEW_PROJ_2/hypervolume_all_points/jknife/jackknife_hv_PCA_AMRsvm_g_jk1_df.csv', header = T)
test = read.csv ('./Users/daniel/Documents/OROPUCHE/PREDICTION/NEW_PROJ_2/hypervolume_all_points/jknife/jackknife_hv_PCA_AMRsvm_g_jk1_df.csv', header = T)
test = read.csv ('./Users/daniel/Documents/OROPUCHE/PREDICTION/NEW_PROJ_2/hypervolume_all_points/jknife/jackknife_hv_PCA_AMR/svm_g_jk1_df.csv', header = T)
test = read.csv ('./hypervolume_all_points/jknife/jackknife_hv_PCA_AMR/svm_g_jk1_df.csv', header = T)
class(test)
vc = list()
for (jj in test[,6]){
if (jj>=1){
vc[[length(vc)+1]] = 1
}else{
if (jj<1 & jj>= 0.90){
vc[[length(vc)+1]] = 2
}else {
if (jj<0.90){
vc[[length(vc)+1]] = 3
}
}
}
}
unlist(vc)
test$cat = unlist(vc)
test2 = test[order(test[,6]),]
par(mfrow = c(1,1))
plot (test2[,6], col = c('black', 'blue','red')[test2[,7]], pch = 16,
ylab = 'Proportion of suitable pixels', xlab = 'Points',
main = 'Occurrence contribution')
plot (fm1)
points (test[,2:3], col= c('black', 'blue','red')[test[,7]], pch = 16, cex = 0.5)
test
vc = list()
for (jj in test[,5]){
if (jj>=1){
vc[[length(vc)+1]] = 1
}else{
if (jj<1 & jj>= 0.90){
vc[[length(vc)+1]] = 2
}else {
if (jj<0.90){
vc[[length(vc)+1]] = 3
}
}
}
}
vc
unlist(vc)
test$cat = unlist(vc)
test2 = test[order(test[,6]),]
par(mfrow = c(1,1))
plot (test2[,6], col = c('black', 'blue','red')[test2[,7]], pch = 16,
ylab = 'Proportion of suitable pixels', xlab = 'Points',
main = 'Occurrence contribution')
plot (fm1)
points (test[,2:3], col= c('black', 'blue','red')[test[,7]], pch = 16, cex = 0.5)
test
vc = list()
for (jj in test[,6]){
if (jj>=1){
vc[[length(vc)+1]] = 1
}else{
if (jj<1 & jj>= 0.90){
vc[[length(vc)+1]] = 2
}else {
if (jj<0.90){
vc[[length(vc)+1]] = 3
}
}
}
}
vc
test
vc
jj
test[,6]
test[,5]
test[,7]
vc = list()
for (jj in test[,7]){
if (jj>=1){
vc[[length(vc)+1]] = 1
}else{
if (jj<1 & jj>= 0.90){
vc[[length(vc)+1]] = 2
}else {
if (jj<0.90){
vc[[length(vc)+1]] = 3
}
}
}
}
jj
vc
unlist(vc)
test$cat = unlist(vc)
test2
test2 = test[order(test[,6]),]
test2
par(mfrow = c(1,1))
plot (test2[,6], col = c('black', 'blue','red')[test2[,7]], pch = 16,
ylab = 'Proportion of suitable pixels', xlab = 'Points',
main = 'Occurrence contribution')
plot (fm1)
points (test[,2:3], col= c('black', 'blue','red')[test[,7]], pch = 16, cex = 0.5)
unlist(vc)
test$cat = unlist(vc)
test2 = test[order(test[,7]),]
par(mfrow = c(1,1))
plot (test2[,7], col = c('black', 'blue','red')[test2[,7]], pch = 16,
ylab = 'Proportion of suitable pixels', xlab = 'Points',
main = 'Occurrence contribution')
plot (fm1)
points (test[,2:3], col= c('black', 'blue','red')[test[,7]], pch = 16, cex = 0.5)
test[,7]
test2
par(mfrow = c(1,1))
plot (test2[,7], col = c('black', 'blue','red')[test2[,8]], pch = 16,
ylab = 'Proportion of suitable pixels', xlab = 'Points',
main = 'Occurrence contribution')
plot (fm1)
fm1 = raster('./hypervolume_all_points/jknife/results_amr1_pca/geof_pcaamr1.asc')
fm1 = raster('./hypervolume_all_points/jknife/results_amr1_pca/hvamr_pca_tot_g.asc')
plot (fm1)
points (test[,2:3], col= c('black', 'blue','red')[test[,7]], pch = 16, cex = 0.5)
test[,2:3]
points (test[,3:4], col= c('black', 'blue','red')[test[,8]], pch = 16, cex = 0.5)
setwd ('/Users/daniel/Documents/OROPUCHE/PREDICTION/NEW_PROJ_2')
setwd ('/Users/daniel/Documents/OROPUCHE/PREDICTION/NEW_PROJ_2')
setwd ('/Users/daniel/Documents/GitHub/Gadgets-and-scripts-for-niche-modeling-')
plot (idd)
setwd ('/Users/daniel/Documents/GitHub/Gadgets-and-scripts-for-niche-modeling-')
data("wrld_simpl", package = "maptools")
WGS84 = crs(wrld_simpl) # geographic projection
idd = subset (wrld_simpl, NAME == 'India')
plot (idd)
world2 = readOGR ('./shapes/ne_10m_admin_0_countries.shp')
plot (world2[which(world2@data$SUBREGION=='Southern Asia'),])
sa1 = subset (world2, SUBREGION == 'Southern Asia')
plot (sa1)
wc1 = getData('worldclim', var='bio', res=10)
par (mfrow = c(2,1))
plot (wc1[[1]], main = 'bio1') #please notice the DOUBLE SQUARE BRACKET
plot (wc1[[12]], main = 'bio12')
wc2 = wc1[[c(1,4,12)]]
sa2 = crop (wc2, sa1) #cropping extracts the extent of the area studied
plot (sa2)
sa2 = mask (sa2, sa1) #masking delineates the shape file in the raster
plot (sa2)
sa2
names (sa2)
mn = cellStats(sa2[[1]], mean) #obtaining the mean of BIO1 in the Southern Asia region
st_dev = cellStats(sa2[[1]], sd) #obtaining the standard deviation of BIO1 in the Southern Asia region
mn
st_dev
my.parameters = formatFunctions(bio1 = c(fun = 'dnorm', mean = 300, sd = 50),
bio12 = c(fun = 'dnorm', mean = 600, sd = 200),
rescale = T) #we transformed to TRUE because I am using two variables
library (devtools)
library(raster)
library(sp)
library(rgeos)
library (rgdal)
library (maptools)
library(mapdata)
library (dismo) #SDM algorithms plus other functions
library(spThin) #thinning of occurrences
library (ENMeval) #maxnet algorithm
library (kuenm) #maxent algorithm dissected
library (virtualspecies) #create virtual species
library(corrplot) #create correlation matrices
library (gatepoints) #for advance functions
library (rgl)
library (Rcpp)
library (hypervolume) #hypervolume based models
my.parameters = formatFunctions(bio1 = c(fun = 'dnorm', mean = 300, sd = 50),
bio12 = c(fun = 'dnorm', mean = 600, sd = 200),
rescale = T) #we transformed to TRUE because I am using two variables
my.parameters
species1 = generateSpFromFun(raster.stack = sa2[[c(1,3)]], parameters = my.parameters,
rescale.each.response = T, #we transformed to TRUE because I am using two variables
rescale = T, #we transformed to TRUE because I am using two variables
plot = TRUE)
plotResponse(species1)
plot (species1$suitab.raster)
cellStats(species1$suitab.raster, stat = "mean") #default prevalence, the mean of the suitability
species1.prev1 <- convertToPA(species1,
PA.method = "probability",
prob.method = "linear") #uses the default prevalence, the mean of the suit rasters!
plot (species1.prev1$pa.raster)
species2.prev2 <- convertToPA(species1,
PA.method = "probability",
prob.method = "linear",
species.prevalence = 0.05) #user define prevalence, has to be lower than predefined prevalence!
species2.prev2$probability.of.occurrence
plot (species2.prev2$pa.raster)
plot (species2.prev2$suitab.raster)
plot (species2.prev2$probability.of.occurrence)
plotSuitabilityToProba(species2.prev2)
occs2 <- sampleOccurrences(species2.prev2, 200, type = "presence only", #can be changed to presence/absence
plot = TRUE, extract.probability = T)
occs2$sample.points
occs2$sample.points[,1:2][which (occs2$sample.points[,4]==1),]
occs2$sample.points[,1:2][which (occs2$sample.points[,4]==0),]
sp_points = occs2$sample.points[,1:2][which (occs2$sample.points[,4]==1),] #vector of occurrences
sp_points
v_species1 = raster('v_species_niche1.asc')
tp1 = read.csv ('tp1_points.csv', header= T)
tp1$ind =  paste(tp1[,1], tp1[,2], sep = "_") #new column for reference
tp1
rsp = tp1[sample(nrow(tp1),(0.35*nrow(tp1))),]
dim(rsp)
ind_p =  tp1[!tp1[,3] %in% rsp[,3],] #points not sampled in the true occurrence data
dim(ind_p)
ind_p2 = ind_p[sample(nrow(ind_p),(0.25*nrow(ind_p))),]
ind_p2$sp1 = rep ('sp1', length(ind_p2[,1]))
ind_p2 = ind_p2[,(c(4,1,2,3))]
dim(ind_p2)
tp1$ind = NULL
rsp$ind=NULL
ind_p2$ind = NULL
plot (v_species1)
points (tp1, col = 'red', pch = 3, cex = 0.6) #points from the truth distribution
points (rsp, col = 'blue', pch = 16, cex = 0.6) #points for modeling
points (ind_p2, col = 'black', pch = 16, cex = 0.6) #points for evaluation
plot (v_species1)
points (rsp, col = 'blue', pch = 16, cex = 0.6) #points for modeling
points (ind_p2, col = 'black', pch = 16, cex = 0.6) #points for evaluation
points (tp1, col = 'red', pch = 3, cex = 0.6) #points from the truth distribution
plot (species2.prev2$pa.raster)
par (mfrow = c(1,1))
plot (species2.prev2$pa.raster)
plot (species2.prev2$suitab.raster)
species2.prev2$probability.of.occurrence
plot (species2.prev2$pa.raster)
plotSuitabilityToProba(species2.prev2)
plot(species2.prev2$probability.of.occurrence)
points (occs2$sample.points[,1:2][which (occs2$sample.points[,4]==1),],
col = 'red', cex = 0.3, pch = 3)
mn
st_dev
plotResponse(species1)
plot (species1$suitab.raster)
citation(hypervolume)
citation('hypervolume')
citation ('geometry')
citation('hypervolume')
